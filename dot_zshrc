
### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

### zinit custom start

# 迁移 oh-my-zsh lib 相当于oh-my-zsh 默认加载的插件
# lib 目录: https://github.com/ohmyzsh/ohmyzsh/tree/master/lib
zi snippet OMZL::clipboard.zsh
zi snippet OMZL::termsupport.zsh
zi snippet OMZL::history.zsh
zi snippet OMZL::key-bindings.zsh
zi snippet OMZL::completion.zsh
zi snippet OMZL::git.zsh

# Load starship theme
# `starship` binary as command, from github release
zinit ice as"command" from"gh-r"
zinit light starship/starship
eval "$(starship init zsh)"

# plugins
# NOTE: fzf-tab needs to be loaded after compinit, but before plugins which will wrap widgets, such as zsh-autosuggestions or fast-syntax-highlighting!!
zinit light Aloxaf/fzf-tab
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma-continuum/fast-syntax-highlighting
# docker 简写: https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/docker
zi ice as"completion"
zi snippet OMZP::docker/_docker

# oh-my-zsh 插件
zi snippet OMZP::git

# oh-my-zsh 自定义插件
WN_OMZ=https://github.com/weineel/ohmyzsh/blob/master

zi snippet "$WN_OMZ/custom/plugins/wn-exa/wn-exa.plugin.zsh"
zi snippet "$WN_OMZ/custom/plugins/weineel/weineel.plugin.zsh"

### zinit custom end

##
### custom
##

export PATH=~/.local/bin:$PATH

# alias
# alias lvim=/Users/lijufeng/.local/bin/lvim
alias vim=lvim

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# nvm node 镜像源
export NVM_NODEJS_ORG_MIRROR=https://mirrors.ustc.edu.cn/node/

# n node 版本管理工具的镜像源
# export NODE_MIRROR=https://mirrors.ustc.edu.cn/node/
# export NODE_MIRROR=https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/

# brew 镜像
export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.ustc.edu.cn/homebrew-core.git"
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.ustc.edu.cn/brew.git"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.ustc.edu.cn/homebrew-bottles"

# pipenv
export PIPENV_VENV_IN_PROJECT=1

# autojump
[ -f /opt/homebrew/etc/profile.d/autojump.sh ] && . /opt/homebrew/etc/profile.d/autojump.sh

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# pnpm
export PNPM_HOME="/Users/lijufeng/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# jetbrains
___MY_VMOPTIONS_SHELL_FILE="${HOME}/.jetbrains.vmoptions.sh"; if [ -f "${___MY_VMOPTIONS_SHELL_FILE}" ]; then . "${___MY_VMOPTIONS_SHELL_FILE}"; fi

